import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Sample dataset (House Size in sqft, Number of bedrooms, Age of the house in years)
data = {
    'Size': [1500, 1600, 1700, 1800, 1900],
    'Bedrooms': [3, 3, 4, 4, 5],
    'Age': [10, 5, 3, 2, 1],
    'Price': [300000, 340000, 360000, 400000, 420000]
}

# Creating DataFrame
df = pd.DataFrame(data)

# Independent variables (features)
X = df[['Size', 'Bedrooms', 'Age']]

# Dependent variable (target)
y = df['Price']


# Split dataset into training and test sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Creating the model
model = LinearRegression()

# Training the model
model.fit(X_train, y_train)

# Predicting on test data
y_pred = model.predict(X_test)

# Displaying results
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)
print("Predicted House Price(s):", y_pred)
print("Actual House Price(s):", y_test.values)
